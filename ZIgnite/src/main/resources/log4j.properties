
log4j.rootLogger=info,console,file
log4j.org.apache.beam.sdk.runners=info
log4j.com.beam=debug

log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss.SSS}]%5p %c{2}:%l %m%n
log4j.appender.console.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss.SSS}][%t:%r]-%5p %c{1}(%L): %m%n

#log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.Append = true
log4j.appender.file.encoding=UTF-8
log4j.appender.file.File=/tmp/logs/ignite-Log.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss.SSS}][%t:%r]-%5p %c{1}: %m%n

#------------------------------------------------------------------------
#    %m 输出代码中指定的消息
#    %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#    %r 输出自应用启动到输出该log信息耗费的毫秒数
#    %c 输出所属的类目，通常就是所在类的全名
#    %t 输出产生该日志事件的线程名
#    %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 ：10：28，921
#    %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
#    %x Used to output the NDC (nested diagnostic context) associated with the thread that generated the logging event
#    %X Used to output the MDC (mapped diagnostic context) associated with the thread that generated the logging event for specified key
