<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example.flink</groupId>
    <artifactId>examples-flink</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>

    <!--<parent>
        <groupId>org.apache.flink</groupId>
        <artifactId>flink-parent</artifactId>
        <version>1.19.0</version>
    </parent>-->

    <properties>
        <target.java.version>11</target.java.version>
        <flink.version>1.19.0</flink.version>
        <japicmp.skip>true</japicmp.skip>

        <scala.version>2.12.7</scala.version>
        <scala.binary.version>2.12</scala.binary.version>
        <scala.macros.version>2.1.1</scala.macros.version>
        <scala.binary.version>2.12</scala.binary.version>


        <maven.compiler.source>${target.java.version}</maven.compiler.source>
        <maven.compiler.target>${target.java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <japicmp.referenceVersion>1.18.0</japicmp.referenceVersion>
        <spotless.scalafmt.version>3.4.3</spotless.scalafmt.version>
        <spotless.delimiter>package</spotless.delimiter>
        <spotless.license.header>
            /*
            * Licensed to the Apache Software Foundation (ASF) under one
            * or more contributor license agreements. See the NOTICE file
            * distributed with this work for additional information
            * regarding copyright ownership. The ASF licenses this file
            * to you under the Apache License, Version 2.0 (the
            * "License"); you may not use this file except in compliance
            * with the License. You may obtain a copy of the License at
            *
            * http://www.apache.org/licenses/LICENSE-2.0
            *
            * Unless required by applicable law or agreed to in writing, software
            * distributed under the License is distributed on an "AS IS" BASIS,
            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            * See the License for the specific language governing permissions and
            * limitations under the License.
            */
        </spotless.license.header>
    </properties>

    <modules>
        <module>batch</module>
        <module>streaming</module>
        <module>table</module>
    </modules>


    <dependencies>

        <!-- Flink dependencies -->

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-core</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!-- Add a logging Framework, to make the examples produce -->
        <!--             logs when executing in the IDE            -->

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.17.1</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.17.1</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>compile</scope>
            <version>2.17.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-test-utils-junit</artifactId>
            <version>1.19.0</version>
        </dependency>


        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang.modules</groupId>
            <artifactId>scala-xml_2.12</artifactId>
            <version>1.0.5</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${target.java.version}</source>
                        <target>${target.java.version}</target>
                        <compilerArgs>
                            <arg>--add-exports=java.base/sun.net.util=ALL-UNNAMED</arg>
                            <arg>--add-exports=java.management/sun.management=ALL-UNNAMED</arg>
                            <arg>--add-exports=java.rmi/sun.rmi.registry=ALL-UNNAMED</arg>
                            <arg>--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                    <executions>
                        <execution>
                            <id>rename</id>
                            <phase>package</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>${target.java.version}</source>
                        <target>${target.java.version}</target>
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                        <compilerArgs>
                            <arg>-Xpkginfo:always</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>${project.basedir}</directory>
                                <includes>
                                    <include>dependency-reduced-pom.xml</include>
                                </includes>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.2</version>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>8.14</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <suppressionsLocation>/tools/maven/suppressions.xml</suppressionsLocation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <configLocation>/tools/maven/checkstyle.xml</configLocation>
                        <logViolationsToConsole>true</logViolationsToConsole>
                        <failOnViolation>true</failOnViolation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>2.27.1</version>
                    <executions>
                        <execution>
                            <id>spotless-check</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <java>
                            <googleJavaFormat>
                                <version>1.7</version>
                                <style>AOSP</style>
                            </googleJavaFormat>
                            <importOrder>
                                <order>org.apache.flink,org.apache.flink.shaded,,javax,java,scala,\#</order>
                            </importOrder>
                            <removeUnusedImports/>
                        </java>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                    <configuration>
                        <quiet>true</quiet>
                        <detectOfflineLinks>false</detectOfflineLinks>
                        <additionalJOptions>
                            <additionalJOption>-Xdoclint:none</additionalJOption>
                        </additionalJOptions>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <ignoredUsedUndeclaredDependencies>
                            <dependency>org.apache.flink:*</dependency>
                            <dependency>org.hamcrest:hamcrest-core</dependency>
                            <dependency>org.powermock:powermock-core</dependency>
                            <dependency>org.powermock:powermock-reflect</dependency>
                            <dependency>org.powermock:powermock-api-support</dependency>
                        </ignoredUsedUndeclaredDependencies>
                        <ignoredUnusedDeclaredDependencies>
                            <dependency>org.apache.flink:force-shading</dependency>
                            <dependency>com.google.code.findbugs:jsr305</dependency>
                            <dependency>org.scala-lang:scala-compiler</dependency>
                            <dependency>org.slf4j:slf4j-api</dependency>
                            <dependency>log4j:log4j</dependency>
                            <dependency>org.slf4j:slf4j-log4j12</dependency>
                            <dependency>org.apache.logging.log4j:log4j-slf4j-impl</dependency>
                            <dependency>org.apache.logging.log4j:log4j-api</dependency>
                            <dependency>org.apache.logging.log4j:log4j-core</dependency>
                            <dependency>org.apache.logging.log4j:log4j-1.2-api</dependency>
                            <dependency>org.apache.flink:flink-test-utils-junit</dependency>
                            <dependency>junit:junit</dependency>
                            <dependency>org.mockito:mockito-core</dependency>
                            <dependency>org.powermock:powermock-api-mockito2</dependency>
                            <dependency>org.powermock:powermock-module-junit4</dependency>
                            <dependency>org.hamcrest:hamcrest-all</dependency>
                        </ignoredUnusedDeclaredDependencies>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.5.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-descriptor</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <args>
                            <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
                            <arg>-nobootcp</arg>
                            <!--<arg>-target:jvm-${target.java.version}</arg>-->
                        </args>
                        <jvmArgs>
                            <arg>-Xss2m</arg>
                        </jvmArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.siom79.japicmp</groupId>
                    <artifactId>japicmp-maven-plugin</artifactId>
                    <version>0.17.1</version>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>cmp</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <oldVersion>
                            <dependency>
                                <groupId>org.apache.flink</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <version>${japicmp.referenceVersion}</version>
                                <type>${project.packaging}</type>
                            </dependency>
                        </oldVersion>
                        <newVersion>
                            <file>
                                <path>
                                    ${project.build.directory}/${project.artifactId}-${project.version}.${project.packaging}
                                </path>
                            </file>
                        </newVersion>
                        <parameter>
                            <onlyModified>true</onlyModified>
                            <includes>
                                <include>@org.apache.flink.annotation.Public</include>
                            </includes>
                            <excludes>
                                <exclude>@org.apache.flink.annotation.Experimental</exclude>
                                <exclude>@org.apache.flink.annotation.PublicEvolving</exclude>
                                <exclude>@org.apache.flink.annotation.Internal</exclude>
                                <exclude>
                                    org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#fromData(java.lang.Object[])
                                </exclude>
                                <exclude>
                                    org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#fromData(org.apache.flink.api.common.typeinfo.TypeInformation,java.lang.Object[])
                                </exclude>
                                <exclude>
                                    org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#fromData(java.lang.Class,java.lang.Object[])
                                </exclude>
                                <exclude>
                                    org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#fromData(java.util.Collection)
                                </exclude>
                                <exclude>
                                    org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#fromData(java.util.Collection,org.apache.flink.api.common.typeinfo.TypeInformation)
                                </exclude>
                                <exclude>org.apache.flink.api.common.functions.RuntimeContext</exclude>
                            </excludes>
                            <accessModifier>public</accessModifier>
                            <breakBuildOnModifications>false</breakBuildOnModifications>
                            <breakBuildOnBinaryIncompatibleModifications>true
                            </breakBuildOnBinaryIncompatibleModifications>
                            <breakBuildOnSourceIncompatibleModifications>true
                            </breakBuildOnSourceIncompatibleModifications>
                            <onlyBinaryIncompatible>false</onlyBinaryIncompatible>
                            <includeSynthetic>true</includeSynthetic>
                            <ignoreMissingClasses>false</ignoreMissingClasses>
                            <skipPomModules>true</skipPomModules>
                            <ignoreNonResolvableArtifacts>true</ignoreNonResolvableArtifacts>
                            <packagingSupporteds>
                                <packagingSupported>jar</packagingSupported>
                            </packagingSupporteds>
                        </parameter>
                        <projectBuildDir>${rootDir}/${japicmp.outputDir}/${project.artifactId}</projectBuildDir>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.flink</groupId>
                                <artifactId>flink-annotations</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>5.0.0-M2</version>
                    <configuration>
                        <format>ALL</format>
                        <skipSystemScope>true</skipSystemScope>
                        <skipProvidedScope>true</skipProvidedScope>
                        <excludes>
                            <exclude>*flink-docs</exclude>
                            <exclude>*flink-end-to-end-tests</exclude>
                            <exclude>*flink-fs-tests*</exclude>
                            <exclude>*flink-yarn-tests*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>


        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>dependency-convergence</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>